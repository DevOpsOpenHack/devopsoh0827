
name: Deploy api/trips

on:
  push:
    branches: [ main ]
    paths:
      - 'apis/trips/**'
permissions:
  contents: write
  issues: write
  packages: write
  pull-requests: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          context: apis/trips/
          tags: ghcr.io/devopsopenhack/devopsoh0827/devopsoh/api-trips:${{ github.sha }}
  deploy:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - uses: azure/login@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
      - name: Azure CLI script
        uses: azure/CLI@v1
        with:
          azcliversion: 2.30.0
          inlineScript: |
            az webapp config container set --docker-custom-image-name 'ghcr.io/devopsopenhack/devopsoh0827/devopsoh/api-trips:${{ github.sha }}' --name devopsoh06022trips --resource-group devopsoh06022rg --slot staging
      - name: Check the deployed service URL
        uses: jtalk/url-health-check-action@v3
        with:
          # Check the following URLs one by one sequentially
          url: https://devopsoh06022trips-staging.azurewebsites.net/api/healthcheck/trips1
          # Follow redirects, or just report success on 3xx status codes
          follow-redirect: true # Optional, defaults to "false"
          # Fail this action after this many failed attempts
          max-attempts: 3 # Optional, defaults to 1
          # Delay between retries
          retry-delay: 5s # Optional, only applicable to max-attempts > 1
          # Retry all errors, including 404. This option might trigger curl upgrade.
          retry-all: false # Optional, defaults to "false"
  deploy_prod:
    name: "Prod Deployment"
    runs-on: ubuntu-latest
    environment: "production"
    needs: "deploy"
    steps:
      - uses: azure/login@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
      - name: Azure CLI script
        uses: azure/CLI@v1
        with:
          azcliversion: 2.30.0
          inlineScript: |
            az webapp deployment slot swap -g devopsoh06022rg -n devopsoh06022trips --slot staging --target-slot production